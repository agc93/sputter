<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sputter Documentation</title><link>/</link><description>Recent content on Sputter Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Mar 2024 02:17:43 +1000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>/docs/introduction/</link><pubDate>Mon, 04 Mar 2024 02:17:43 +1000</pubDate><guid>/docs/introduction/</guid><description>Sputter is a flexible and highly configurable API server to retrieve hard drive temperatures, and optionally publish them via MQTT.
In short, Sputter will gather up hard drive temperatures from a number of sources either on-demand or on a timer, and then return those temperatures while optionally also publishing those values over MQTT. Sputter also includes first-class support for Home Assistant so it can publish those temperatures as entities in Home Assistant.</description></item><item><title>Quickstart</title><link>/docs/quickstart/</link><pubDate>Mon, 04 Mar 2024 02:17:43 +1000</pubDate><guid>/docs/quickstart/</guid><description>Due to its flexibility and extensibility (and its complexity behind the scenes), there&amp;rsquo;s a few ways of getting started with Sputter. The first choice is which tool you want to use: the CLI or the Server.
CLI: Standalone command-line-only utility to gather drive temperatures from all the supported sources and outputs them to the console, optionally also publishing the measurements to an MQTT server. Server: Server application that runs a HTTP API that you can query to gather drive measurements and optionally publish those measurements to an MQTT server and/or to Home Assistant.</description></item><item><title>Command-Line/CLI</title><link>/docs/command-line/</link><pubDate>Mon, 04 Mar 2024 02:17:43 +1000</pubDate><guid>/docs/command-line/</guid><description>ðŸ’¡ The Sputter CLI supports both Windows and Linux! Just download the right binary for your target platform. Getting Help linkYou can use the -h/--help option to get help for the available commands and options when using the CLI:
USAGE: sputter.exe [filter] [OPTIONS] ARGUMENTS: [filter] OPTIONS: -h, --help Prints help information -v, --version Prints version information --scrutiny-api --mqtt-server --mqtt-credentials The default command will discover any local drives using the default adapters and gather measurements from all of them.</description></item><item><title>Usage</title><link>/docs/server/usage/</link><pubDate>Sat, 21 Jan 2023 16:13:15 +0000</pubDate><guid>/docs/server/usage/</guid><description>As outlined in the quickstart docs, you can get started with the Sputter server using either the native binaries for your platform of choice, or a pre-built Docker image from Quay.io.
ðŸ’¡ There is also a highly experimental Home Assistant add-on available, which is covered in more detail here.
Installation linkNative Binaries linkTo run the server, download the correct release from GitHub Releases, making sure to download the matching sputter-server-* file for your target platform/architecture of choice.</description></item><item><title>Configuration</title><link>/docs/server/configuration/</link><pubDate>Sat, 21 Jan 2023 16:13:15 +0000</pubDate><guid>/docs/server/configuration/</guid><description>The default behaviour of Sputter should work fine for many use cases, but Sputter is designed to be super-configurable to adapt to whatever weird use case you can come up with.
Configuration linkThe Sputter server reads its configuration from a few different places, but we recommend using environment variables if you just want to tweak one or two things, or use a configuration file if you want to customize things in more detail.</description></item><item><title>Home Assistant Integration</title><link>/docs/server/home-assistant/integration/</link><pubDate>Sat, 21 Jan 2023 16:13:15 +0000</pubDate><guid>/docs/server/home-assistant/integration/</guid><description>Sputter comes bundled with optional Home Assistant support that can seamlessly create new entities in Home Assistant for discovered drives. Once enabled, any time Sputter publishes measurements (after requests, or on a schedule) you&amp;rsquo;ll be able to immediately see updated values right in Home Assistant.
Configuration linkTo enable the Home Assistant support, you&amp;rsquo;ll need to first set up MQTT support.
âš  If you don&amp;rsquo;t have MQTT configured correctly, the HA integration will not work!</description></item><item><title>Home Assistant Add-on</title><link>/docs/server/home-assistant/addon/</link><pubDate>Sat, 21 Jan 2023 16:13:15 +0000</pubDate><guid>/docs/server/home-assistant/addon/</guid><description>âš  The Home Assistant add-on is in extremely early preview and has not been tested much. Use with caution! We provide a Home Assistant add-on for running Sputter inside supported Home Assistant installations.
This is particularly useful when you are running Home Assistant on the same hardware as the drives you&amp;rsquo;re trying to monitor, or when using the Scrutiny integration.
Installation linkFrom the Settings &amp;gt; Add-ons &amp;gt; Add-on Store menu, click the overflow menu in the top-right, choose Repositories and add https://github.</description></item><item><title>Adapters</title><link>/docs/reference/adapters/</link><pubDate>Sat, 21 Jan 2023 16:16:15 +0000</pubDate><guid>/docs/reference/adapters/</guid><description>About Adapters linkAdapters are the method Sputter uses to discover available drives and gather measurements (including the temperature). In short, Sputter itself (either the CLI or the Server) will poll any available adapters looking for drives, gather measurements (sensors and states) from those drives, aggregate measurements together to prevent duplicates, then return them as appropriate.
These adapters are loosely coupled to the server to make it easier to add new data sources to enable measuring drives in more contexts.</description></item><item><title>Plugins</title><link>/docs/developer/plugins/</link><pubDate>Sat, 21 Jan 2023 16:13:15 +0000</pubDate><guid>/docs/developer/plugins/</guid><description>Introduction linkSputter supports a plugin system that allows for loading new data sources (i.e. adapters) and publish targets. To build a plugin, create a new class library, add a reference to Sputter.Core, and add a class implementing the IPlugin interface (from Sputter.Composition). In the ConfigureServices method, you can register any services your plugin needs, and also register any types for Sputter to load.
Adapters linkAdapter Implementation linkAt its simplest, a new data source is just an implementation of IDriveSensorAdapter which looks like this:</description></item><item><title>Sensors and States</title><link>/docs/reference/sensors/</link><pubDate>Sat, 21 Jan 2023 16:16:15 +0000</pubDate><guid>/docs/reference/sensors/</guid><description>When Sputter measures drives, it gathers collections of two primitives for each drive measures: sensors and states.
This design is specifically to keep Sputter flexible and extensible, but it can make things a little daunting at first. REad more below, but it&amp;rsquo;s really not that complex once you get into it.
When Sputter runs a measurement (either on-demand or on a schedule) it polls all the available adapters for drives, filters them (if applicable) then runs each available drive through all the available adapters to gather sensors and states.</description></item><item><title>MQTT</title><link>/docs/reference/mqtt/</link><pubDate>Sat, 21 Jan 2023 16:16:15 +0000</pubDate><guid>/docs/reference/mqtt/</guid><description>ðŸ’¡ Both the CLI and Server support publishing drive measurements to an MQTT broker! MQTT Messages linkTopics linkWhen Sputter publishes drive measurements to MQTT, it will publish measurements to a separate topic per-drive. The topic format will be in the format sputter/drv-&amp;lt;SERIAL-NUMBER&amp;gt; with a JSON payload. For example:
Topic Message sputter/drv-Z52CBFRL {&amp;quot;sensors&amp;quot;:{&amp;quot;temperature&amp;quot;:39},&amp;quot;states&amp;quot;:{&amp;quot;healthy&amp;quot;:&amp;quot;False&amp;quot;,&amp;quot;source&amp;quot;:&amp;quot;scrutiny&amp;quot;}} Home Assistant Integration linkAs outlined in the HA Integration docs, Sputter can automatically create sensor entitiies in Home Assistant for measured drives.</description></item></channel></rss>
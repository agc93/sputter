<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reference on Sputter Documentation</title><link>/docs/reference/</link><description>Recent content in Reference on Sputter Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 Jan 2023 16:16:15 +0000</lastBuildDate><atom:link href="/docs/reference/index.xml" rel="self" type="application/rss+xml"/><item><title>Adapters</title><link>/docs/reference/adapters/</link><pubDate>Sat, 21 Jan 2023 16:16:15 +0000</pubDate><guid>/docs/reference/adapters/</guid><description>About Adapters linkAdapters are the method Sputter uses to discover available drives and gather measurements (including the temperature). In short, Sputter itself (either the CLI or the Server) will poll any available adapters looking for drives, gather measurements (sensors and states) from those drives, aggregate measurements together to prevent duplicates, then return them as appropriate.
These adapters are loosely coupled to the server to make it easier to add new data sources to enable measuring drives in more contexts.</description></item><item><title>Sensors and States</title><link>/docs/reference/sensors/</link><pubDate>Sat, 21 Jan 2023 16:16:15 +0000</pubDate><guid>/docs/reference/sensors/</guid><description>When Sputter measures drives, it gathers collections of two primitives for each drive measures: sensors and states.
This design is specifically to keep Sputter flexible and extensible, but it can make things a little daunting at first. REad more below, but it&amp;rsquo;s really not that complex once you get into it.
When Sputter runs a measurement (either on-demand or on a schedule) it polls all the available adapters for drives, filters them (if applicable) then runs each available drive through all the available adapters to gather sensors and states.</description></item><item><title>MQTT</title><link>/docs/reference/mqtt/</link><pubDate>Sat, 21 Jan 2023 16:16:15 +0000</pubDate><guid>/docs/reference/mqtt/</guid><description>ðŸ’¡ Both the CLI and Server support publishing drive measurements to an MQTT broker! MQTT Messages linkTopics linkWhen Sputter publishes drive measurements to MQTT, it will publish measurements to a separate topic per-drive. The topic format will be in the format sputter/drv-&amp;lt;SERIAL-NUMBER&amp;gt; with a JSON payload. For example:
Topic Message sputter/drv-Z52CBFRL {&amp;quot;sensors&amp;quot;:{&amp;quot;temperature&amp;quot;:39},&amp;quot;states&amp;quot;:{&amp;quot;healthy&amp;quot;:&amp;quot;False&amp;quot;,&amp;quot;source&amp;quot;:&amp;quot;scrutiny&amp;quot;}} Home Assistant Integration linkAs outlined in the HA Integration docs, Sputter can automatically create sensor entitiies in Home Assistant for measured drives.</description></item></channel></rss>